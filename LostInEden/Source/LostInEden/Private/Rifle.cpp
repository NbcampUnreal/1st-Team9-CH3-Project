#include "Rifle.h"
#include "Engine/World.h"
#include "Kismet/GameplayStatics.h"
#include "TimerManager.h"

ARifle::ARifle()
{
	Damage = 15.0f;
	FireRate = 0.1f;
	MaxAmmo = 30;
	CurrentAmmo = MaxAmmo;
	Range = 3000.0f;

	bIsAutomatic = true;
	BulletSpread = 2.0f;
	BurstCount = 3;
	BurstFireRate = 0.15f;
}

void ARifle::Fire()
{
	if (CurrentAmmo > 0)
	{
		StartAutoFire(); // üîπ ÎßàÏö∞Ïä§ Î≤ÑÌäºÏùÑ ÎàÑÎ•¥Î©¥ ÏûêÎèô ÏÇ¨Í≤© ÏãúÏûë
	}
	else
	{
		UE_LOG(LogTemp, Warning, TEXT("ÌÉÑÏïΩ ÏóÜÏùå!"));
	}
}

void ARifle::StartAutoFire()
{
	if (CurrentAmmo > 0)
	{
		UE_LOG(LogTemp, Warning, TEXT("ÏûêÎèôÏÇ¨Í≤© ÎÇ®ÏùÄ ÌÉÑÏïΩ: %d"), CurrentAmmo);
		CurrentAmmo--;

		// Ï¥ùÏïå Î∞úÏÇ¨
		if (BulletFactory)
		{
			UWorld* World = GetWorld();
			if (World)
			{
				FVector MuzzlePos = MuzzleLocation->GetComponentLocation();
				FRotator MuzzleRot = MuzzleLocation->GetComponentRotation();
				World->SpawnActor<ABullet>(BulletFactory, MuzzlePos, MuzzleRot);
			}
		}

		// ÏûêÎèô ÏÇ¨Í≤© Î∞òÎ≥µ Ïã§Ìñâ (ÎßàÏö∞Ïä§ Î≤ÑÌäºÏùÑ ÎàÑÎ•¥Í≥† ÏûàÏùÑ ÎïåÎßå)
		GetWorld()->GetTimerManager().SetTimer(AutoFireHandle, this, &ARifle::StartAutoFire, FireRate, false);
	}
	else
	{
		UE_LOG(LogTemp, Warning, TEXT("ÌÉÑÏïΩ ÏóÜÏùå!"));
	}
}

void ARifle::StopAutoFire()
{
	// üîπ ÎßàÏö∞Ïä§ Î≤ÑÌäºÏùÑ ÎñºÎ©¥ ÏûêÎèô ÏÇ¨Í≤© Ï§ëÎã®
	GetWorld()->GetTimerManager().ClearTimer(AutoFireHandle);
}

void ARifle::BurstFire()
{
	for (int32 i = 0; i < BurstCount; i++)
	{
		if (CurrentAmmo > 0)
		{
			CurrentAmmo--;
			UE_LOG(LogTemp, Warning, TEXT("Ï†êÏÇ¨ ÏÇ¨Í≤©: %d/%d"), i + 1, BurstCount);
		}
		else
		{
			break;
		}
	}
}

void ARifle::Reload()
{
	UE_LOG(LogTemp, Warning, TEXT("ÏÜåÏ¥ù Ïû¨Ïû•Ï†Ñ!"));
	CurrentAmmo = MaxAmmo;
}
